{"version":3,"file":"array.js","sourceRoot":"","sources":["../../src/array.js"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * \r\n * Package: extenders\r\n * Author: Ganesh B\r\n * Description: Node module for Array, Object, String, Decorator extention Utils like for Python and more for Node.js\r\n * Install: npm i extenders --save\r\n * Github: https://github.com/ganeshkbhat/jsextenders\r\n * npmjs Link: https://www.npmjs.com/package/extenders\r\n * File: src/array.js\r\n * File Description: \r\n * \r\n * \r\n*/\r\n\r\n/* eslint no-console: 0 */\r\n\r\n'use strict';\r\n\r\nvar { SubArrayExtender, Freeze, extender } = require(\"./extenders\");\r\n\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} executeFunction\r\n * @return {*} \r\n */\r\nfunction execute(executeFunction, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    return executeFunction(a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*[]} iterable (The new external iterable for the function)\r\n * @param {*} index (The index value for the function)\r\n */\r\nfunction extend(iterable, index, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    this.clear();\r\n    this.push(...[...a.splice(0, index), ...iterable, ...a]);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} count (The count number of items)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction max(count, start, end, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    start = (!!start) ? start : 0;\r\n    end = (!!end) ? end : a.length;\r\n    a = a.splice((!!start) ? start : 0, (!!end) ? end : this.length);\r\n    a.sort();\r\n    if (!count || count === 1) { return a[a.length - 1]; }\r\n    a.splice(0, a.length - count);\r\n    return a;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} count (The count number of items)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction maxIndexes(count, start, end, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    start = (!!start) ? start : 0;\r\n    end = (!!end) ? end : a.length;\r\n    a = a.splice(start, end);\r\n    a = a.map((i, idx) => { return { index: idx, value: i } });\r\n    a.sort((p, n) => { return p.v - n.v });\r\n    if (!count || count === 1) { a[a.length - 1]; };\r\n    a.splice(0, a.length - count);\r\n    return a;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} count (The count number of items)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction min(count, start, end, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    start = (!!start) ? start : 0;\r\n    end = (!!end) ? end : a.length;\r\n    a = a.splice(start, end);\r\n    a.sort();\r\n    if (!count || count === 1) { return a[0]; }\r\n    return a.splice(0, count);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} count (The count number of items)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction minIndexes(count, start, end, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    start = (!!start) ? start : 0;\r\n    end = (!!end) ? end : a.length;\r\n    a = a.splice(start, end);\r\n    a = a.map((i, idx) => { i = { index: idx, value: i }; return i; });\r\n    a.sort((p, n) => { return p.v - n.v; });\r\n    if (!count || count === 1) { a[0]; }\r\n    a.splice(0, count);\r\n    return a;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction average(start, end, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    start = (!!start) ? start : 0;\r\n    end = (!!end) ? end : a.length;\r\n    a = a.splice(start, end);\r\n    let s = a.reduce((s, i) => { return s + i; });\r\n    return s / a.length;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction sum(start, end, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    return a.splice((!!start) ? start : 0, (!!end) ? end : this.length).reduce((s, i) => { return s + i; });\r\n}\r\n\r\n/**\r\n * permutator: OLD Alternative\r\n * Reiterative function withing while loop (multiple loops not noticable)\r\n *\r\n * @param {*} start\r\n * @param {*} end\r\n * @param {string} [method=\"replace\"]\r\n * @param {*} thisValue\r\n * @return {*} \r\n */\r\nfunction permutators(start, end, method = \"replace\", thisValue) {\r\n    var result = [];\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    start = (!!start) ? start : 0;\r\n    end = (!!end) ? end : a.length;\r\n    a = a.splice(start, end);\r\n\r\n    let length = a.length;\r\n    result = [...a.slice()];\r\n    c = new Array(length).fill(0),\r\n        i = 1, k, p;\r\n\r\n    while (i < length) {\r\n        if (c[i] < i) {\r\n            k = i % 2 && c[i];\r\n            p = a[i];\r\n            a[i] = a[k];\r\n            a[k] = p;\r\n            ++c[i];\r\n            i = 1;\r\n            result.push(a.slice());\r\n        } else {\r\n            c[i] = 0;\r\n            ++i;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\n/**\r\n * permutator\r\n * Reiterative function\r\n *\r\n * @param {*} start\r\n * @param {*} end\r\n * @param {string} [method=\"replace\"]\r\n * @param {*} thisValue\r\n * @return {*} \r\n */\r\nfunction permutator(start, end, method = \"replace\", thisValue) {\r\n    var results = [];\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    start = (!!start) ? start : 0;\r\n    end = (!!end) ? end : a.length;\r\n    a = a.splice(start, end);\r\n    function permute(arr, memo) {\r\n        var cur, memo = memo || [];\r\n        for (var i = 0; i < arr.length; i++) {\r\n            cur = arr.splice(i, 1);\r\n            if (arr.length === 0) {\r\n                results.push(memo.concat(cur));\r\n            }\r\n            permute(arr.slice(), memo.concat(cur));\r\n            arr.splice(i, 0, cur[0]);\r\n        }\r\n        return results;\r\n    }\r\n    return permute(a);\r\n}\r\n\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} start\r\n * @param {*} end\r\n * @param {string} [method=\"replace\"]\r\n * @param {*} thisValue\r\n * @return {*} \r\n */\r\nfunction permutationSubsets(start, end, method = \"replace\", thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    start = (!!start) ? start : 0;\r\n    end = (!!end) ? end : a.length;\r\n    a = a.splice(start, end);\r\n    let dataset = [];\r\n    for (let i = 0; i < a.length; i++) {\r\n        dataset.push((i === 0) ? [a.slice(0, i + 1)] : a.slice(0, i + 1));\r\n    }\r\n    return dataset.reduce((p, c, i, []) => {\r\n        return [...p, ...permutator(0, c.length, \"replace\", c)];\r\n    });\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} i\r\n * @param {string} [fn] Name of the Javascript Math function\r\n * @return {*} i // modified\r\n */\r\nfunction mathswitch(i, fname, callback) {\r\n    switch (fname) {\r\n        case \"abs\":\r\n            i = Math.abs(i);\r\n            break;\r\n        case \"acos\":\r\n            i = Math.acos(i);\r\n            break;\r\n        case \"acosh\":\r\n            i = Math.acosh(i);\r\n            break;\r\n        case \"asin\":\r\n            i = Math.asin(i);\r\n            break;\r\n        case \"asinh\":\r\n            i = Math.asinh(i);\r\n            break;\r\n        case \"atan\":\r\n            i = Math.atan(i);\r\n            break;\r\n        case \"atan2\":\r\n            i = Math.atan2(...i);\r\n            break;\r\n        case \"atanh\":\r\n            i = Math.atanh(i);\r\n            break;\r\n        case \"cbrt\":\r\n            i = Math.cbrt(i);\r\n            break;\r\n        case \"ceil\":\r\n            i = Math.ceil(i);\r\n            break;\r\n        case \"clz32\":\r\n            i = Math.clz32(i);\r\n            break;\r\n        case \"cos\":\r\n            i = Math.cos(i);\r\n            break;\r\n        case \"cosh\":\r\n            i = Math.cosh(i);\r\n            break;\r\n        case \"exp\":\r\n            i = Math.exp(i);\r\n            break;\r\n        case \"expm1\":\r\n            i = Math.expm1(i);\r\n            break;\r\n        case \"floor\":\r\n            i = Math.floor(i);\r\n            break;\r\n        case \"fround\":\r\n            i = Math.fround(i);\r\n            break;\r\n        case \"log\":\r\n            i = Math.log(i);\r\n            break;\r\n        case \"hypot\":\r\n            i = Math.hypot(...i);\r\n            break;\r\n        case \"imul\":\r\n            i = Math.imul(...i);\r\n            break;\r\n        case \"log10\":\r\n            i = Math.log10(i);\r\n            break;\r\n        case \"log1p\":\r\n            i = Math.log1p(i);\r\n            break;\r\n        case \"log2e\":\r\n            i = Math.LOG2E;\r\n            break;\r\n        case \"log10e\":\r\n            i = Math.LOG10E;\r\n            break;\r\n        case \"ln2\":\r\n            i = Math.LN2(i);\r\n            break;\r\n        case \"ln10\":\r\n            i = Math.LN10(i);\r\n            break;\r\n        case \"max\":\r\n            i = Math.max(...i);\r\n            break;\r\n        case \"min\":\r\n            i = Math.min(...i);\r\n            break;\r\n        case \"pow\":\r\n            i = Math.pow(...i);\r\n            // Math.pow(i, power);\r\n            break;\r\n        case \"random\":\r\n            i = Math.random();\r\n            break;\r\n        case \"round\":\r\n            i = Math.round(i);\r\n            break;\r\n        case \"sign\":\r\n            i = Math.sign(i);\r\n            break;\r\n        case \"sin\":\r\n            i = Math.sin(i);\r\n            break;\r\n        case \"sinh\":\r\n            i = Math.sinh(i);\r\n            break;\r\n        case \"sqrt\":\r\n            i = Math.sqrt(i);\r\n            break;\r\n        case \"tan\":\r\n            i = Math.tan(i);\r\n            break;\r\n        case \"tanh\":\r\n            i = Math.tanh(i);\r\n            break;\r\n        case \"trunc\":\r\n            i = Math.trunc(i);\r\n            break;\r\n        case \"acos\":\r\n            i = Math.acos(i);\r\n            break;\r\n        default:\r\n            i = ((!!callback) ? callback(i) : function (i) { return i; })(i);\r\n    }\r\n    return i;\r\n}\r\n\r\n/**\r\n * mathswitchOptions\r\n *      Gives all the type options for MapperCopy and Mapper\r\n *\r\n * @return {*} \r\n */\r\nfunction mathswitchOptions() {\r\n    return [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atan2\", \"atanh\", \"cbrt\", \"ceil\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"expm1\", \"floor\", \"fround\", \"log\", \"hypot\", \"imul\", \"log10\", \"log1p\", \"log2e\", \"log10e\", \"ln2\", \"ln10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"acos\"]\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {string} type [default=\"abs\"] Options: [mathswitchOptions()]\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction MapperCopy(type = \"abs\", start, end, method = \"replace\", thisValue, callback, ...args) {\r\n    if (!callback) {\r\n        callback = (a, ...args) => { return a.map((i, idx) => { return mathswitch((!!args && !!args.length) ? [i, ...args] : i, type); }); }\r\n    }\r\n    if (method === \"inrange\") {\r\n        let a = (!!thisValue) ? [...thisValue] : [...this];\r\n        let b = (!!thisValue) ? [...thisValue] : [...this];\r\n        start = (!!start) ? start : 0;\r\n        end = (!!end) ? end : a.length;\r\n        a = a.splice(start, end);\r\n        args = (!!args) ? args : [];\r\n        a = callback(a, ...args);\r\n        b = [...b.splice(0, start), ...a, ...b.splice(end - start + 1, b.length)];\r\n        return b;\r\n    } else {\r\n        let a = (!!thisValue) ? [...thisValue] : [...this];\r\n        start = (!!start) ? start : 0;\r\n        end = (!!end) ? end : a.length;\r\n        a = a.splice(start, end);\r\n        args = (!!args) ? args : [];\r\n        a = callback(a, ...args);\r\n        return a;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {string} type [default=\"abs\"] Options: [mathswitchOptions()]\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction Mapper(type = \"abs\", start, end, method = \"replace\", thisValue, callback, ...args) {\r\n    return MapperCopy(type, start, end, method, thisValue || this, callback, ...args);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction acosMap(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"acos\", start, end, method, thisValue || this);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction cosMap(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"cos\", start, end, method, thisValue || this);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction sinMap(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"sin\", start, end, method, thisValue || this);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction asinMap(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"asin\", start, end, method, thisValue || this);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction absMap(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"abs\", start, end, method, thisValue || this);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction factorialMap(start, end, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    start = (!!start) ? start : 0;\r\n    end = (!!end) ? end : a.length;\r\n    a = a.splice(start, end);\r\n    return a.reduce((s, i) => { return s * i; });\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction cosMapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"cos\", start, end, method, thisValue || this);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction acosMapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"acos\", start, end, method, thisValue || this);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction sinMapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"sin\", start, end, method, thisValue || this);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction asinMapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"asin\", start, end, method, thisValue || this);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction absMapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"abs\", start, end, method, thisValue || this);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction LN2Map(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"LN2\", start, end, method, thisValue || this);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction LN10Map(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"LN10\", start, end, method, thisValue || this);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction LOG2EMap(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"log2e\", start, end, method, thisValue || this);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction LOG10EMap(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"log10e\", start, end, method, thisValue || this);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction LN2MapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"LN2\", start, end, method, thisValue || this);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction LN10MapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"LN10\", start, end, method, thisValue || this);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction LOG2EMapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"log2e\", start, end, method, thisValue || this);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction LOG10EMapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"log10e\", start, end, method, thisValue || this);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction floorMap(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"floor\", start, end, method, thisValue || this);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction ceilMap(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"ceil\", start, end, method, thisValue || this);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction roundMap(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"round\", start, end, method, thisValue || this);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction floorMapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"floor\", start, end, method, thisValue || this);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction ceilMapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"ceil\", start, end, method, thisValue || this);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction roundMapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"round\", start, end, method, thisValue || this);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction squareMap(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"pow\", start, end, method, thisValue || this, null, 2);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction sqrtMap(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"sqrt\", start, end, method, thisValue || this);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} power (The power value for the function)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction powMap(power, start, end, method = \"replace\", thisValue) {\r\n    if (!power) { throw new Error(\"Power is not defined\"); }\r\n    let a = MapperCopy(\"pow\", start, end, method, thisValue || this, null, power);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} multiplier (The mutiplier for each of the array items)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction multiplyMap(multiplier, start, end, method = \"replace\", thisValue) {\r\n    if (!multiplier) { throw new Error(\"Multiplier is not defined\"); }\r\n    let a = MapperCopy(\"pow\", start, end, method, thisValue || this, null, multiplier);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array) \r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction squareMapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"pow\", start, end, method, thisValue || this, null, 2);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction sqrtMapCopy(start, end, method = \"replace\", thisValue) {\r\n    return MapperCopy(\"sqrt\", start, end, method, thisValue || this);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} power (The power value for the function)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction powMapCopy(power, start, end, method = \"replace\", thisValue) {\r\n    if (!power) { throw new Error(\"Power is not defined\"); }\r\n    return MapperCopy(\"pow\", start, end, method, thisValue || this, null, power);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} multiplier (The mutiplier for each of the array items)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction multiplyMapCopy(multiplier, start, end, method = \"replace\", thisValue) {\r\n    if (!multiplier) { throw new Error(\"Multiplier is not defined\"); }\r\n    return MapperCopy(\"pow\", start, end, method, thisValue || this, null, multiplier);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} count (The count number of items)\r\n * @param {*} multiplier (The mutiplier for each of the array items)\r\n * @return {*} \r\n */\r\nfunction randomRange(count, multiplier) {\r\n    if (!count) { throw new Error(\"Count [minimal range number] is not defined\"); }\r\n    let a = MapperCopy(\"random\", 0, count, \"replace\", this, null, multiplier);\r\n    return a;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} multiplier (The mutiplier for each of the array items)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"inrange\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction fillRandomRange(multiplier, start, end, method = \"inrange\", thisValue) {\r\n    // if (!end) {\r\n    //     end = (!!start) ? start : [...this].length;\r\n    //     start = 0;\r\n    // }\r\n    // let diff = end - start;\r\n    // let a = [...this].randomRange(diff, multiplier);\r\n    a = MapperCopy(\"fillrandom\", start, end, method, thisValue || this, (a, ...args) => { return a.map((i, idx) => { return i * factorialMap(0, args.length, args) }) }, multiplier);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} multiplier (The mutiplier for each of the array items)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"inrange\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction fillRange(multiplier, start, end, method = \"inrange\", thisValue) {\r\n    if (!count) { throw new Error(\"Count [minimal range number] is not defined\"); }\r\n    let a = Mapper(\"fillRange\", start, end, method, this, (a, ...args) => { return a.map((i) => { return i * multiplier }) });\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} item (The item value for the function) \r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction append(item, thisValue) {\r\n    if (!item) { throw new Error(\"Item is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    a.push(item);\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*[]} iterable (The new external iterable for the function)\r\n * @return {*} \r\n */\r\nfunction isArray(iterable) {\r\n    iterable = (!!iterable) ? iterable : this;\r\n    return Array.isArray(iterable);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} index (The index value for the function)\r\n * @param {*} item (The item value for the function)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction insert(index, item, thisValue) {\r\n    if (!item) { throw new Error(\"Item is not defined\"); }\r\n    if (!index && index !== 0) { throw new Error(\"Index is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    a = [...a.splice(0, index - 1), item, ...a];\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} index (The index value for the function)\r\n * @param {*} array (The iterable array or item value for the function) // array or item\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction insertAll(index, array, thisValue) {\r\n    if (!index && index !== 0) { throw new Error(\"Index is not defined\"); }\r\n    if (!array) { throw new Error(\"Array is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    a = [...a.splice(0, index), ...array, ...a];\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} array (The iterable array value for the function)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @param {*[]} args - list of multiple arguments\r\n */\r\nfunction concatMerge(array, thisValue, ...args) {\r\n    var argsList = [];\r\n    if (!!args.length) {\r\n        for (let i = 0; i < args.length; i++) {\r\n            if (!!Array.isArray(args[i])) {\r\n                argsList = [...argsList, ...args[i]];\r\n            } else {\r\n                argsList = [...argsList, args[i]];\r\n            }\r\n        }\r\n    }\r\n    thisValue = (!!thisValue) ? thisValue : [...this]\r\n    let a = [...thisValue, ...array, ...argsList];\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} index (The index value for the function)\r\n * @param {*} item (The item value for the function)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction insertCopy(index, item, thisValue) {\r\n    if (!item) { throw new Error(\"Item is not defined\"); }\r\n    if (!index && index !== 0) { throw new Error(\"Index is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    return [...a.splice(0, index - 1), item, ...a];\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} index (The index value for the function)\r\n * @param {*} array (The iterable array or item value for the function) // array or item\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction insertAllCopy(index, array, thisValue) {\r\n    if (!index && index !== 0) { throw new Error(\"Index is not defined\"); }\r\n    if (!array) { throw new Error(\"Array is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    return [...a.splice(0, index), ...array, ...a];\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} item (The item value for the function)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction count(item, start, end, thisValue) {\r\n    if (!item) { throw new Error(\"Item is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    a = a.splice((!!start) ? start : 0, (!!end) ? end : this.length)\r\n    return a.filter((i) => i === item).length;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} index (The index value for the function)\r\n * @param {*} item (The item value for the function)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction replace(index, item, thisValue) {\r\n    if (!item) { throw new Error(\"Item is not defined\"); }\r\n    if (!index && index !== 0) { throw new Error(\"Index is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    a[index] = item;\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} item (The item value for the function)\r\n * @param {*} replaceValue\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction replaceAll(item, replaceValue, start, end, method = \"replace\", thisValue) {\r\n    if (method === \"inrange\") {\r\n\r\n    } else {\r\n        let a = (!!thisValue) ? [...thisValue] : [...this];\r\n        start = (!!start) ? start : 0;\r\n        end = (!!end) ? end : a.length;\r\n        a = a.splice(start, end);\r\n        while (!!a.includes(item)) {\r\n            let i = a.indexOf(item);\r\n            (i !== -1) ? (a[i] = replaceValue) : a[i];\r\n        }\r\n        let b = [...this];\r\n        b = [...b.splice(0, start), ...a, ...b.splice(end, b.length)];\r\n        this.length = 0;\r\n        this.push(...b);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} item (The item value for the function)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction remove(item, thisValue) {\r\n    if (!item) { throw new Error(\"Item is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    let i = a.indexOf(item);\r\n    (i !== -1) ? a.splice(i, 1) : a;\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} item (The item value for the function)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction removeAll(item, start, end, method = \"replace\", thisValue) {\r\n    if (!item) { throw new Error(\"Item is not defined\"); }\r\n    if (method === \"inrange\") {\r\n\r\n    } else {\r\n        let a = (!!thisValue) ? [...thisValue] : [...this];\r\n        start = (!!start) ? start : 0;\r\n        end = (!!end) ? end : a.length;\r\n        a = a.splice(start, end);\r\n        while (!!a.includes(item)) {\r\n            let i = a.indexOf(item);\r\n            (i !== -1) ? a.splice(i, 1) : a;\r\n        }\r\n        let b = [...this];\r\n        b = [...b.splice(0, start), ...a, ...b.splice(end, b.length)];\r\n        this.length = 0;\r\n        this.push(...b);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} index (The index value for the function)\r\n * @param {*} item (The item value for the function)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction replaceCopy(index, item, thisValue) {\r\n    if (!item) { throw new Error(\"Item is not defined\"); }\r\n    if (!index && index !== 0) { throw new Error(\"Index is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    a[index] = item;\r\n    return a;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} item (The item value for the function)\r\n * @param {*} replaceValue\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction replaceAllCopy(item, replaceValue, start, end, method = \"replace\", thisValue) {\r\n    if (method === \"inrange\") {\r\n\r\n    } else {\r\n        let a = (!!thisValue) ? [...thisValue] : [...this];\r\n        start = (!!start) ? start : 0;\r\n        end = (!!end) ? end : a.length;\r\n        a = a.splice(start, end);\r\n        while (!!a.includes(item)) {\r\n            let i = a.indexOf(item);\r\n            (i !== -1) ? (a[i] = replaceValue) : a[i];\r\n        }\r\n        let b = [...this];\r\n        return [...b.splice(0, start), ...a, ...b.splice(end, b.length)];\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} item (The item value for the function)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction removeCopy(item, thisValue) {\r\n    if (!item) { throw new Error(\"Item is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    let i = a.indexOf(item);\r\n    (i !== -1) ? a.splice(i, 1) : a;\r\n    return a;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} item (The item value for the function)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction removeAllCopy(item, start, end, method = \"replace\", thisValue) {\r\n    if (!item) { throw new Error(\"Item is not defined\"); }\r\n    if (method === \"inrange\") {\r\n\r\n    } else {\r\n        let a = (!!thisValue) ? [...thisValue] : [...this];\r\n        start = (!!start) ? start : 0;\r\n        end = (!!end) ? end : a.length;\r\n        a = a.splice(start, end);\r\n        while (!!a.includes(item)) {\r\n            let i = a.indexOf(item);\r\n            (i !== -1) ? a.splice(i, 1) : a;\r\n        }\r\n        let b = [...this];\r\n        return [...b.splice(0, start), ...a, ...b.splice(end, b.length)];\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} index (The index value for the function)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction pop(index, thisValue) {\r\n    if (!index && index !== 0) { throw new Error(\"Index is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    a.splice(index, 1)[0];\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n */\r\nfunction clear(start, end) {\r\n    this.splice((!!start) ? start : 0, (!!end) ? end : this.length);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} item (The item value for the function)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction index(item, start, end, thisValue) {\r\n    if (!item) { throw new Error(\"Item is not defined\"); }\r\n    // let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    if ((!start && start !== 0) && !end) { return this.indexOf(item); }\r\n    if (!!start && !!end) { return [...this.splice(start, (end < this.length) ? end - start + 1 : this.length)].map((i, idx) => { return { \"item\": i, \"index\": idx }; }).filter((i) => { return i.item === item; }); }\r\n    if (!!start && !end) { return [...this.splice(0, (start < this.length) ? start : this.length)].map((i, idx) => { return { \"item\": i, \"index\": idx }; }).filter((i) => { return i.item === item; }); }\r\n    return [...this].map((i, idx) => { return { \"item\": i, \"index\": idx } }).filter((i) => { return i.item === item; });\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} [key=null]\r\n * @param {boolean} reverse [default=false] Options: [true, false]\r\n * // sort(key=None, reverse=False) {}\r\n */\r\nfunction pysort(key = null, reverse = false) {\r\n    let a = [...this];\r\n    if (!!key && typeof key === \"function\") {\r\n        a = a.sort(key);\r\n    } else if (reverse === true) {\r\n        a = a.sort((c, d) => { return c < d });\r\n    } else {\r\n        a = a.sort((c, d) => { return c > d });\r\n    }\r\n    return a;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction reverser(start, end, method = \"replace\", thisValue) {\r\n    let a = MapperCopy(\"reverser\", start, end, method, thisValue || this, (a) => { return a.reverse(); });\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction reverseCopy(start, end, method = \"replace\", thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    return MapperCopy(\"reverser\", start, end, method, thisValue || this, (a) => { return a.reverse(); });\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction copy(start, end, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    return a.splice((!!start) ? start : 0, (!!end) ? end : a.length);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} mapperFunction\r\n * @param {*} arg\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @param {*} keyconvertor [default=\"index\"] Options: [index, value]\r\n * @return {*} \r\n */\r\nfunction diction(mapperFunction, arg, start, end, keyconvertor = \"index\", thisValue, keyArrayValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this], aO = {};\r\n    if (!mapperFunction || typeof mapperFunction !== \"function\") { mapperFunction = (i) => i; }\r\n    if (keyconvertor === \"value\") {\r\n        aO = a.reduce((a, c, i) => { return { ...a, ...{ [c]: c } } }, aO);\r\n    } else if (keyconvertor === \"index\") {\r\n        aO = Object.assign(aO, a);\r\n    } else if (keyconvertor === \"array\") {\r\n        if (a.length < keyArrayValue.length) throw new Error(\"[ERROR:] keyArrayValue array length less than array length\");\r\n        aO = a.reduce((a, c, i) => { return { ...a, ...{ [keyArrayValue[i]]: c } } }, aO);\r\n    }\r\n    if (!!mapperFunction && typeof mapperFunction === \"function\") return mapperFunction(aO, arg);\r\n    return aO;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*[]} iterable (The new external iterable for the function)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @return {*} \r\n */\r\nfunction subset(iterable, start, end, thisValue) {\r\n    if (!iterable) { throw new Error(\"Iterable is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    let len = a.length;\r\n    for (let i = 0; i < len; i++) {\r\n        if (!iterable.includes(a[i])) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*[]} iterable (The new external iterable for the function)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @return {*} \r\n */\r\nfunction superset(iterable, start, end, thisValue) {\r\n    if (!iterable) { throw new Error(\"Iterable is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    let len = iterable.length;\r\n    for (let i = 0; i < len; i++) {\r\n        if (!a.includes(iterable[i])) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*[]} iterable (The new external iterable for the function)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @return {*} \r\n */\r\nfunction diffIterable(iterable, start, end, thisValue) {\r\n    if (!iterable) { throw new Error(\"Iterable is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this], arr = [];\r\n    let len = iterable.length;\r\n    for (let i = 0; i < len; i++) {\r\n        (!a.includes(iterable[i])) ? arr.push({ index: i, value: iterable[i] }) : arr;\r\n    }\r\n    return arr;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*[]} iterable (The new external iterable for the function)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction diffSelf(iterable, start, end, thisValue) {\r\n    if (!iterable) { throw new Error(\"Iterable is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this], arr = [];\r\n    let len = a.length;\r\n    for (let i = 0; i < len; i++) {\r\n        (!a.includes(iterable[i])) ? arr.push({ index: i, value: a[i] }) : arr;\r\n    }\r\n    return arr;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*[]} iterable (The new external iterable for the function)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction diffBoth(iterable, start, end, thisValue) {\r\n    if (!iterable) { throw new Error(\"Iterable is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    let b = { \"self\": [], \"iterable\": [] };\r\n    b[\"self\"] = a.diffSelf(iterable, start, end);\r\n    b[\"iterable\"] = a.diffIterable(iterable, start, end);\r\n    return b;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*[]} iterable (The new external iterable for the function)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction equal(iterable, start, end, thisValue) {\r\n    if (!iterable) { throw new Error(\"Iterable is not defined\"); }\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    a.splice(0, (!!start) ? start : 0);\r\n    a.splice((!!end) ? end : a.length, a.length);\r\n    iterable.splice(0, (!!start) ? start : 0);\r\n    iterable.splice((!!end) ? end : iterable.length, iterable.length);\r\n    return JSON.stringify(a) === JSON.stringify(iterable);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*[]} iterable (The new external iterable for the function)\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction similar(iterable, start, end, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    a.splice(0, (!!start) ? start : 0);\r\n    a.splice((!!end) ? end : a.length, a.length);\r\n    iterable.splice(0, (!!start) ? start : 0);\r\n    iterable.splice((!!end) ? end : iterable.length, iterable.length);\r\n    a.sort();\r\n    iterable.sort();\r\n    return JSON.stringify(a) === JSON.stringify(iterable);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction uniques(start, end, method = \"replace\", thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    let b = (!!thisValue) ? [...thisValue] : [...this];\r\n    a = a.MapperCopy(\"uniques\", start, end, method, thisValue || this, (a, ...args) => { return Array.from(new Set(a)); });\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction uniquesCopy(start, end, method = \"replace\", thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    let b = (!!thisValue) ? [...thisValue] : [...this];\r\n    return a.MapperCopy(\"uniques\", start, end, method, thisValue || this, (a, ...args) => { return Array.from(new Set(a)); });\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} [method=\"range\"] // replace, inrange\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction duplicates(start, end, method = \"range\", thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    let noduplicatesarray = a.uniquesCopy(), c;\r\n    for (let i = 0; i < noduplicatesarray.length; i++) {\r\n        c = a.indexOf(noduplicatesarray[i]);\r\n        a[c] = (c >= 0) ? undefined : a[c];\r\n    }\r\n    a = a.filter((a) => { return a !== undefined });\r\n    if (method === \"inrange\") {\r\n        let b = (!!thisValue) ? [...thisValue] : [...this];\r\n        a = [...b.splice(0, start), ...a, ...b.splice(end, b.length)];\r\n\r\n    }\r\n    this.length = 0;\r\n    this.push(...a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} [method=\"range\"] // replace, inrange\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction duplicatesCopy(start, end, method = \"range\", thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    a.splice(0, (!!start) ? start : 0);\r\n    a.splice((!!end) ? end : a.length, a.length);\r\n    let noduplicatesarray = (!!thisValue) ? [...thisValue] : [...this];\r\n    noduplicatesarray.uniques();\r\n    for (let i = 0; i < noduplicatesarray.length; i++) {\r\n        let c = a.indexOf(noduplicatesarray[i]);\r\n        a[c] = (c !== -1) ? undefined : a[c];\r\n    }\r\n    return a.filter((a) => a !== undefined);\r\n}\r\n\r\nfunction findDuplicateCounts(start, end, method = \"range\", thisValue) {\r\n    let arr = (!!thisValue) ? [...thisValue] : [...this];\r\n    arr.splice(0, (!!start) ? start : 0);\r\n    arr.splice((!!end) ? end : arr.length, arr.length);\r\n    let counts = {};\r\n    let duplicates = [];\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (counts[arr[i]] === undefined) {\r\n            counts[arr[i]] = 1;\r\n        } else {\r\n            counts[arr[i]]++;\r\n        }\r\n    }\r\n\r\n    for (let key in counts) {\r\n        if (counts[key] > 1) {\r\n            duplicates.push({ element: key, count: counts[key] });\r\n        }\r\n    }\r\n\r\n    return duplicates;\r\n}\r\n\r\n// function findDuplicates(arr) {\r\n//     let duplicates = [];\r\n//     for (let i = 0; i < arr.length; i++) {\r\n//         for (let j = i + 1; j < arr.length; j++) {\r\n//             if (arr[i] === arr[j] && !duplicates.includes(arr[i])) {\r\n//                 duplicates.push(arr[i]);\r\n//             }\r\n//         }\r\n//     }\r\n//     return duplicates;\r\n// }\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} start\r\n * @param {*} end\r\n * @param {string} [method=\"range\"]\r\n * @param {*} thisValue\r\n * @return {*} \r\n */\r\nfunction getPermutations(start, end, method = \"replace\", thisValue) {\r\n    let arr = (!!thisValue) ? [...thisValue] : [...this];\r\n    arr.splice(0, (!!start) ? start : 0);\r\n    arr.splice((!!end) ? end : arr.length, arr.length);\r\n    const result = [];\r\n\r\n    function permute(arr, permutation = []) {\r\n        if (arr.length === 0) {\r\n            result.push(permutation);\r\n        } else {\r\n            for (let i = 0; i < arr.length; i++) {\r\n                const remaining = arr.slice(0, i).concat(arr.slice(i + 1));\r\n                permute(remaining, permutation.concat(arr[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    permute(arr);\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} start\r\n * @param {*} end\r\n * @param {string} [method=\"range\"]\r\n * @param {*} thisValue\r\n * @return {*} \r\n */\r\nfunction getCombinations(start, end, method = \"replace\", thisValue) {\r\n    let arr = (!!thisValue) ? [...thisValue] : [...this];\r\n    arr.splice(0, (!!start) ? start : 0);\r\n    arr.splice((!!end) ? end : arr.length, arr.length);\r\n    const result = [];\r\n\r\n    function combine(arr, combination = [], start = 0) {\r\n        result.push(combination);\r\n        for (let i = start; i < arr.length; i++) {\r\n            combine(arr, combination.concat(arr[i]), i + 1);\r\n        }\r\n    }\r\n\r\n    combine(arr);\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} start\r\n * @param {*} end\r\n * @param {string} [method=\"range\"]\r\n * @param {*} thisValue\r\n * @return {*} \r\n */\r\nfunction getPermutationsOfCombinations(start, end, method = \"replace\", thisValue) {\r\n    let arr = (!!thisValue) ? [...thisValue] : [...this];\r\n    arr.splice(0, (!!start) ? start : 0);\r\n    arr.splice((!!end) ? end : arr.length, arr.length);\r\n\r\n    const combinations = getCombinations(arr);\r\n    const permutations = [];\r\n\r\n    for (let i = 0; i < combinations.length; i++) {\r\n        const combination = combinations[i];\r\n        const combinationPermutations = getPermutations(combination);\r\n        permutations.push(combinationPermutations);\r\n    }\r\n\r\n    return permutations.flat();\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} item (The item value for the function)\r\n */\r\nfunction enqueue(item) {\r\n    if (!item) { throw new Error(\"Item is not defined\"); }\r\n    this.push(item);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @return {*} \r\n */\r\nfunction dequeue() {\r\n    return this.shift();\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} iterator\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction transpose(iterator, start, end, method = \"replace\", thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    iterator = (!!iterator) ? iterator : a;\r\n    iterator.reverser();\r\n    iterator.map((item) => {\r\n        return (Array.isArray(item)) ? transpose(item) : item;\r\n    });\r\n    if (method === \"inrange\") {\r\n\r\n    } else {\r\n        this.length = 0;\r\n        this.push(...iterator);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} iterator\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction transposeCopy(iterator, start, end, method = \"replace\", thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    iterator = (!!iterator) ? iterator : a;\r\n    iterator.reverser();\r\n    iterator.map((item) => {\r\n        if (Array.isArray(item)) {\r\n            item = transpose(item);\r\n        } else {\r\n            item = item\r\n        };\r\n        return item;\r\n    });\r\n    if (method === \"inrange\") {\r\n\r\n    } else {\r\n\r\n    }\r\n    return iterator;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} array (The iterable array value for the function)\r\n */\r\nfunction immutable(array) {\r\n    if (!!array) {\r\n        return Object.freeze([...array])\r\n    } else {\r\n        Object.freeze(this);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used) \r\n */\r\nfunction flatten(start, end, method = \"replace\", thisValue) {\r\n    if (method === \"inrange\") {\r\n\r\n    } else {\r\n        let a = (!!thisValue) ? [...thisValue] : [...this];\r\n        let diff = ((!!end) ? end : a.length) - ((!!start) ? start : 0);\r\n        a.splice(0, start);\r\n        a.splice(diff, a.length);\r\n        // a = a.splice((!!start) ? start : 0, (!!end) ? end : a.length);\r\n        let len = a.length;\r\n        for (let i = 0; i < len; i++) {\r\n            if (!!this.isArray(a[i])) {\r\n                let idlen = a[i].length;\r\n                a = [...a.splice(0, i), ...a[0], ...a.splice(1, a.length)];\r\n                i = i + idlen;\r\n            }\r\n        }\r\n        this.length = 0;\r\n        this.push(...a);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction flattenDeep(start, end, method = \"replace\", thisValue) {\r\n    if (method === \"inrange\") {\r\n\r\n    } else {\r\n        let a = (!!thisValue) ? [...thisValue] : [...this];\r\n        a = a.flat(Infinity);\r\n        this.length = 0;\r\n        this.push(...a);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction flattenCopy(start, end, method = \"replace\", thisValue) {\r\n    // let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    // return a.flatMap(num => num);\r\n    if (method === \"inrange\") {\r\n\r\n    } else {\r\n        let a = (!!thisValue) ? [...thisValue] : [...this];\r\n        let diff = ((!!end) ? end : a.length) - ((!!start) ? start : 0);\r\n        a.splice(0, start);\r\n        a.splice(diff, a.length);\r\n        // a = a.splice((!!start) ? start : 0, (!!end) ? end : a.length);\r\n        let len = a.length;\r\n        for (let i = 0; i < len; i++) {\r\n            if (!!this.isArray(a[i])) {\r\n                let idlen = a[i].length;\r\n                a = [...a.splice(0, i), ...a[0], ...a.splice(1, a.length)];\r\n                i = i + idlen;\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} method [default=\"replace\"] Options: [replace, inrange]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction flattenDeepCopy(start, end, method = \"replace\", thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    return a.flat(Infinity);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} stop (The end index of the array)\r\n * @param {number} step (The increment value to use)\r\n * @return {*} \r\n */\r\nfunction range(start, stop, step) {\r\n    if (((!start && !stop) || !start) && (start !== 0) && (stop !== 0)) { throw new Error(\"Start [minimal range end number] is not defined\"); }\r\n    let a = [];\r\n    if ((!!start && !stop) && stop !== 0) {\r\n        for (let i = 0; i < start; i += (!!step) ? step : 1) {\r\n            a[i] = i;\r\n        }\r\n    } else if (!!start && !!stop) {\r\n        for (let i = start; i < stop; i += (!!step) ? step : 1) {\r\n            a[i] = i;\r\n        }\r\n    }\r\n    return a;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {string} type [default=\"object\"]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction enumerate(type = \"object\", thisValue) {\r\n    if (![\"object\", \"array\"].includes(type)) { throw new Error(\"Type not defined\"); };\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    let b = [], len = a.length;\r\n    for (let i = 0; i < len; i++) {\r\n        if (type === \"object\") {\r\n            b[i] = { \"index\": i, \"value\": a[i] };\r\n        }\r\n        if (type === \"array\") {\r\n            b[i] = [i, a[i]];\r\n        }\r\n    }\r\n    return b;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {string} type [default=\"object\"]\r\n * @param {* []} thisValue (The start array value instead of the original array to be used)\r\n * @return {*} \r\n */\r\nfunction enumerateGenerator(type = \"object\", thisValue) {\r\n    if (![\"object\", \"array\"].includes(type)) { throw new Error(\"Type not defined\"); };\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    let b = [], len = a.length;\r\n\r\n    return b;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} start\r\n * @param {*} end\r\n * @param {*} thisValue\r\n * @return {*} \r\n */\r\nfunction generator(start, end, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    let diff = ((!!end) ? end : a.length) - ((!!start) ? start : 0);\r\n    a.splice(0, start);\r\n    a.splice(diff, a.length);\r\n\r\n    function* arrayGenerator(arr) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            yield arr[i];\r\n        }\r\n    }\r\n    return arrayGenerator(a);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction del(start, end, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    if (!end) {\r\n        end = (!!start) ? start : a.length;\r\n        start = 0;\r\n    }\r\n    this.splice(start, end - start + 1);\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} start (The start index of the array)\r\n * @param {number} end (The end index of the array)\r\n * @param {string} message [default=\"\"]\r\n * @param {*} [callback=console.log]\r\n * @param {*[]} thisValue (The start array value instead of the original array to be used)\r\n */\r\nfunction log(start, end, message = \"\", callback = console.log, thisValue) {\r\n    let a = (!!thisValue) ? [...thisValue] : [...this];\r\n    if (!end) {\r\n        end = (!!start) ? start : a.length;\r\n        start = 0;\r\n    }\r\n    a.splice(start, end - start + 1);\r\n    callback(message + JSON.stringify(a));\r\n}\r\n\r\n\r\n// function toObject(keyconvertor = \"value\") {\r\n//     let c = [...this], aO = {};\r\n//     if (keyconvertor === \"value\") {\r\n//         return c.reduce((a, c, i) => { return { ...a, ...{ [c]: c } } }, aO);\r\n//     } else if (keyconvertor === \"index\") {\r\n//         return Object.assign(aO, c);\r\n//     }\r\n// }\r\n\r\n\r\n/**\r\n * Numpy needed functions\r\n * https://github.com/numpy/numpy/blob/main/numpy/core/defchararray.py \r\n * https://github.com/numpy/numpy/blob/main/numpy/core/einsumfunc.py\r\n * https://github.com/numpy/numpy/blob/main/numpy/core/fromnumeric.py\r\n * https://github.com/numpy/numpy/blob/main/numpy/core/function_base.py\r\n * https://github.com/numpy/numpy/blob/main/numpy/core/umath.py\r\n * \r\n */\r\n\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} a\r\n * @param {*} indices\r\n * @param {*} [axis=null]\r\n * @param {*} [out=null]\r\n * @param {string} [mode='raise']\r\n */\r\nfunction take(a, indices, axis = null, out = null, mode = 'raise') {\r\n    // https://github.com/numpy/numpy/blob/main/numpy/core/fromnumeric.py\r\n}\r\n\r\n/**\r\n *\r\n *\r\n */\r\nfunction choose() {\r\n    // https://github.com/numpy/numpy/blob/main/numpy/core/fromnumeric.py\r\n}\r\n\r\n// // _ lodash Functions\r\n// // Array\r\n\r\n// function chunk() { }\r\n// function compact() { }\r\n\r\n// // concatMerge // function concat() { }\r\n// // diffBoth => // function difference() { }\r\n// // diffSelf =>  // function differenceBy() { }\r\n// // diff =>  // function differenceWith() { }\r\n\r\n// del, remove =>  // function drop() { }\r\n// del, remove =>  // function dropRight() { }\r\n// function dropRightWhile() { }\r\n// function dropWhile() { }\r\n// function fill() { }\r\n// function findIndex() { }\r\n// function findLastIndex() { }\r\n// function first -> head() { }\r\n\r\n// // flatten, flattenCopy => // function flatten() { }\r\n// // flattenDeep, flattenDeepCopy => function flattenDeep() { }\r\n// function flattenDepth() { }\r\n// function fromPairs() { }\r\n// function head() { }\r\n// function indexOf() { }\r\n// function initial() { }\r\n// function intersection() { }\r\n// function intersectionBy() { }\r\n// function intersectionWith() { }\r\n// function join() { }\r\n// function last() { }\r\n// function lastIndexOf() { }\r\n// function nth() { }\r\n// function pull() { }\r\n// function pullAll() { }\r\n// function pullAllBy() { }\r\n// function pullAllWith() { }\r\n// function pullAt() { }\r\n// remove => // function remove() { }\r\n// function reverse() { }\r\n// function slice() { }\r\n// pysort\r\n// function sortedIndex() { }\r\n// function sortedIndexBy() { }\r\n// function sortedIndexOf() { }\r\n// function sortedLastIndex() { }\r\n// function sortedLastIndexBy() { }\r\n// function sortedLastIndexOf() { }\r\n// function sortedUniq() { }\r\n// function sortedUniqBy() { }\r\n// function tail() { }\r\n// function take() { }\r\n// function takeRight() { }\r\n// function takeRightWhile() { }\r\n// function takeWhile() { }\r\n// function union() { }\r\n// function unionBy() { }\r\n// function unionWith() { }\r\n// unique, uniqueCopy => // function uniq() { }\r\n// function uniqBy() { }\r\n// function uniqWith() { }\r\n// function unzip() { }\r\n// function unzipWith() { }\r\n// function without() { }\r\n// function xor() { }\r\n// function xorBy() { }\r\n// function xorWith() { }\r\n// function zip() { }\r\n// function zipObject() { }\r\n// function zipObjectDeep() { }\r\n// function zipWith() { }\r\n\r\n\r\n// // _ lodash Functions\r\n// // Collection\r\n\r\n// function countBy() { }\r\n// function each -> forEach() { }\r\n// function eachRight -> forEachRight() { }\r\n// function every() { }\r\n// function filter() { }\r\n// function find() { }\r\n// function findLast() { }\r\n// function flatMap() { }\r\n// function flatMapDeep() { }\r\n// function flatMapDepth() { }\r\n// function forEach() { }\r\n// function forEachRight() { }\r\n// function groupBy() { }\r\n// function includes() { }\r\n// function invokeMap() { }\r\n// function keyBy() { }\r\n// function map() { }\r\n// function orderBy() { }\r\n// function partition() { }\r\n// function reduce() { }\r\n// function reduceRight() { }\r\n// function reject() { }\r\n// function sample() { }\r\n// function sampleSize() { }\r\n// function shuffle() { }\r\n// function size() { }\r\n// function some() { }\r\n// function sortBy() { }\r\n\r\n// // _ lodash Functions\r\n// // Collection\r\n\r\n// function countBy() { }\r\n// function each -> forEach() { }\r\n// function eachRight -> forEachRight() { }\r\n// function every() { }\r\n// function filter() { }\r\n// function find() { }\r\n// function findLast() { }\r\n// function flatMap() { }\r\n// function flatMapDeep() { }\r\n// function flatMapDepth() { }\r\n// function forEach() { }\r\n// function forEachRight() { }\r\n// function groupBy() { }\r\n// function includes() { }\r\n// function invokeMap() { }\r\n// function keyBy() { }\r\n// function map() { }\r\n// function orderBy() { }\r\n// function partition() { }\r\n// function reduce() { }\r\n// function reduceRight() { }\r\n// function reject() { }\r\n// function sample() { }\r\n// function sampleSize() { }\r\n// function shuffle() { }\r\n// function size() { }\r\n// function some() { }\r\n// function sortBy() { }\r\n\r\n\r\n// // _ lodash Functions\r\n// // Object\r\n\r\n// function assign() { }\r\n// function assignIn() { }\r\n// function assignInWith() { }\r\n// function assignWith() { }\r\n// function at() { }\r\n// function create() { }\r\n// function defaults() { }\r\n// function defaultsDeep() { }\r\n// function entries -> toPairs() { }\r\n// function entriesIn -> toPairsIn() { }\r\n// function extend -> assignIn() { }\r\n// function extendWith -> assignInWith() { }\r\n// function findKey() { }\r\n// function findLastKey() { }\r\n// function forIn() { }\r\n// function forInRight() { }\r\n// function forOwn() { }\r\n// function forOwnRight() { }\r\n// function functions() { }\r\n// function functionsIn() { }\r\n// function get() { }\r\n// function has() { }\r\n// function hasIn() { }\r\n// function invert() { }\r\n// function invertBy() { }\r\n// function invoke() { }\r\n// function keys() { }\r\n// function keysIn() { }\r\n// function mapKeys() { }\r\n// function mapValues() { }\r\n// function merge() { }\r\n// function mergeWith() { }\r\n// function omit() { }\r\n// function omitBy() { }\r\n// function pick() { }\r\n// function pickBy() { }\r\n// function result() { }\r\n// function set() { }\r\n// function setWith() { }\r\n// function toPairs() { }\r\n// function toPairsIn() { }\r\n// function transform() { }\r\n// function unset() { }\r\n// function update() { }\r\n// function updateWith() { }\r\n// function values() { }\r\n// function valuesIn() { }\r\n\r\n\r\n// // _ lodash Functions\r\n// // Lang\r\n\r\n// function castArray() { }\r\n// function clone() { }\r\n// function cloneDeep() { }\r\n// function cloneDeepWith() { }\r\n// function cloneWith() { }\r\n// function conformsTo() { }\r\n// function eq() { }\r\n// function gt() { }\r\n// function gte() { }\r\n// function isArguments() { }\r\n// function isArray() { }\r\n// function isArrayBuffer() { }\r\n// function isArrayLike() { }\r\n// function isArrayLikeObject() { }\r\n// function isBoolean() { }\r\n// function isBuffer() { }\r\n// function isDate() { }\r\n// function isElement() { }\r\n// function isEmpty() { }\r\n// function isEqual() { }\r\n// function isEqualWith() { }\r\n// function isError() { }\r\n// function isFinite() { }\r\n// function isFunction() { }\r\n// function isInteger() { }\r\n// function isLength() { }\r\n// function isMap() { }\r\n// function isMatch() { }\r\n// function isMatchWith() { }\r\n// function isNaN() { }\r\n// function isNative() { }\r\n// function isNil() { }\r\n// function isNull() { }\r\n// function isNumber() { }\r\n// function isObject() { }\r\n// function isObjectLike() { }\r\n// function isPlainObject() { }\r\n// function isRegExp() { }\r\n// function isSafeInteger() { }\r\n// function isSet() { }\r\n// function isString() { }\r\n// function isSymbol() { }\r\n// function isTypedArray() { }\r\n// function isUndefined() { }\r\n// function isWeakMap() { }\r\n// function isWeakSet() { }\r\n// function lt() { }\r\n// function lte() { }\r\n// function toArray() { }\r\n// function toFinite() { }\r\n// function toInteger() { }\r\n// function toLength() { }\r\n// function toNumber() { }\r\n// function toPlainObject() { }\r\n// function toSafeInteger() { }\r\n// function toString() { }\r\n\r\n\r\nfunction ArrayExtended() {\r\n\r\n    let SubArray = SubArrayExtender();\r\n\r\n    Object.defineProperty(SubArray.prototype, 'execute', { value: execute, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'extend', { value: extend, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'append', { value: append, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'isArray', { value: isArray, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'insertAll', { value: insertAll, enumerable: true, });\r\n    // concatMerge // function concat() { }\r\n    Object.defineProperty(SubArray.prototype, 'concatMerge', { value: concatMerge, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'merge', { value: concatMerge, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'insert', { value: insert, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'replace', { value: replace, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'replaceCopy', { value: replaceCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'replaceAll', { value: replaceAll, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'replaceAllCopy', { value: replaceAllCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'remove', { value: remove, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'removeAll', { value: removeAll, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'insertAllCopy', { value: insertAllCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'insertCopy', { value: insertCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'removeCopy', { value: removeCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'removeAllCopy', { value: removeAllCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'popIndex', { value: pop, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'clear', { value: clear, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'index', { value: index, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'count', { value: count, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'pysort', { value: pysort, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'reverser', { value: reverser, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'reverseCopy', { value: reverseCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'copy', { value: copy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'diffIterable', { value: diffIterable, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'diffSelf', { value: diffSelf, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'diffBoth', { value: diffBoth, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'differenceBy', { value: diffIterable, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'differenceWith', { value: diffSelf, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'difference', { value: diffBoth, enumerable: true, });\r\n    // diffBoth => // function difference() { }\r\n    // diffSelf =>  // function differenceBy() { }\r\n    // diff =>  // function differenceWith() { }\r\n    Object.defineProperty(SubArray.prototype, 'equal', { value: equal, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'similar', { value: similar, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'uniques', { value: uniques, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'duplicates', { value: duplicates, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'uniquesCopy', { value: uniquesCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'duplicatesCopy', { value: duplicatesCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'findDuplicateCounts', { value: findDuplicateCounts, enumerable: true, });\r\n\r\n    Object.defineProperty(SubArray.prototype, 'enqueue', { value: enqueue, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'dequeue', { value: dequeue, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'transpose', { value: transpose, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'transposeCopy', { value: transposeCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'immutables', { value: immutable, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'freeze', { value: immutable, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'tuple', { value: immutable, enumerable: true, });\r\n    // flatten, flattenCopy => // function flatten() { }\r\n    // flattenDeep, flattenDeepCopy => function flattenDeep() { }\r\n    Object.defineProperty(SubArray.prototype, 'flatten', { value: flatten, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'flattenCopy', { value: flattenCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'flattenDeep', { value: flattenDeep, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'flattenDeepCopy', { value: flattenDeepCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'range', { value: range, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'enumerate', { value: enumerate, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'enumerateGenerator', { value: enumerateGenerator, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'generator', { value: generator, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'del', { value: del, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'diction', { value: diction, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'toObject', { value: diction, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'subset', { value: subset, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'superset', { value: superset, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'extender', { value: extender, enumerable: true, configurable: true, writable: true });\r\n    Object.defineProperty(SubArray.prototype, 'log', { value: log, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'max', { value: max, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'maxIndexes', { value: maxIndexes, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'min', { value: min, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'minIndexes', { value: minIndexes, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'average', { value: average, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'sum', { value: sum, enumerable: true, });\r\n    // Object.defineProperty(SubArray.prototype, 'permutator', { value: permutator, enumerable: true, });\r\n    // Object.defineProperty(SubArray.prototype, 'permutationSubsets', { value: permutationSubsets, enumerable: true, });\r\n\r\n    Object.defineProperty(SubArray.prototype, 'getPermutations', { value: getPermutations, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'getCombinations', { value: getCombinations, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'getPermutationsOfCombinations', { value: getPermutationsOfCombinations, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'factorialMap', { value: factorialMap, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'acosMap', { value: acosMap, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'sinMap', { value: sinMap, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'asinMap', { value: asinMap, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'absMap', { value: absMap, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'cosMap', { value: cosMap, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'acosMapCopy', { value: acosMapCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'sinMapCopy', { value: sinMapCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'asinMapCopy', { value: asinMapCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'absMapCopy', { value: absMapCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'cosMapCopy', { value: cosMapCopy, enumerable: true, });\r\n    // Object.defineProperty(SubArray.prototype, 'LN2MapCopy', { value: LN2MapCopy, enumerable: true, });\r\n    // Object.defineProperty(SubArray.prototype, 'LN10MapCopy', { value: LN10MapCopy, enumerable: true, });\r\n    // Object.defineProperty(SubArray.prototype, 'LOG2EMapCopy', { value: LOG2EMapCopy, enumerable: true, });\r\n    // Object.defineProperty(SubArray.prototype, 'LOG10EMapCopy', { value: LOG10EMapCopy, enumerable: true, });\r\n    // Object.defineProperty(SubArray.prototype, 'LN2MapCopy', { value: LN2MapCopy, enumerable: true, });\r\n    // Object.defineProperty(SubArray.prototype, 'LN10MapCopy', { value: LN10MapCopy, enumerable: true, });\r\n    // Object.defineProperty(SubArray.prototype, 'LOG2EMapCopy', { value: LOG2EMapCopy, enumerable: true, });\r\n    // Object.defineProperty(SubArray.prototype, 'LOG10EMapCopy', { value: LOG10EMapCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'floorMap', { value: floorMap, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'ceilMap', { value: ceilMap, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'roundMap', { value: roundMap, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'squareMap', { value: squareMap, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'sqrtMap', { value: sqrtMap, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'powMap', { value: powMap, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'multiplyMap', { value: multiplyMap, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'floorMapCopy', { value: floorMapCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'ceilMapCopy', { value: ceilMapCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'roundMapCopy', { value: roundMapCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'squareMapCopy', { value: squareMapCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'sqrtMapCopy', { value: sqrtMapCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'powMapCopy', { value: powMapCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'multiplyMapCopy', { value: multiplyMapCopy, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'randomRange', { value: randomRange, enumerable: true, });\r\n    // Object.defineProperty(SubArray.prototype, 'fillRandomRange', { value: fillRandomRange, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'fillRange', { value: fillRange, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'Mapper', { value: Mapper, enumerable: true, });\r\n    Object.defineProperty(SubArray.prototype, 'MapperCopy', { value: MapperCopy, enumerable: true, });\r\n\r\n    // Object.defineProperty(SubArray.prototype, 'duplicates', { value: duplicates, enumerable: true, });\r\n\r\n    return SubArray;\r\n}\r\n\r\n\r\nfunction extendArray() {\r\n\r\n    Object.defineProperty(Array.prototype, 'execute', { value: execute, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'extend', { value: extend, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'append', { value: append, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'isArray', { value: isArray, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'insertAll', { value: insertAll, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'concatMerge', { value: concatMerge, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'merge', { value: concatMerge, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'insert', { value: insert, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'replace', { value: replace, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'replaceCopy', { value: replaceCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'replaceAll', { value: replaceAll, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'replaceAllCopy', { value: replaceAllCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'remove', { value: remove, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'removeAll', { value: removeAll, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'insertAllCopy', { value: insertAllCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'insertCopy', { value: insertCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'removeCopy', { value: removeCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'removeAllCopy', { value: removeAllCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'popIndex', { value: pop, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'clear', { value: clear, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'index', { value: index, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'count', { value: count, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'pysort', { value: pysort, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'reverser', { value: reverser, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'reverseCopy', { value: reverseCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'copy', { value: copy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'diffIterable', { value: diffIterable, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'diffSelf', { value: diffSelf, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'diffBoth', { value: diffBoth, enumerable: true, });\r\n    // diffBoth => // function difference() { }\r\n    // diffSelf =>  // function differenceBy() { }\r\n    // diff =>  // function differenceWith() { }\r\n    Object.defineProperty(Array.prototype, 'differenceBy', { value: diffIterable, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'differenceWith', { value: diffSelf, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'difference', { value: diffBoth, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'equal', { value: equal, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'similar', { value: similar, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'uniques', { value: uniques, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'duplicates', { value: duplicates, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'uniquesCopy', { value: uniquesCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'duplicatesCopy', { value: duplicatesCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'findDuplicateCounts', { value: findDuplicateCounts, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'enqueue', { value: enqueue, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'dequeue', { value: dequeue, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'transpose', { value: transpose, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'transposeCopy', { value: transposeCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'immutables', { value: immutable, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'freeze', { value: immutable, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'tuple', { value: immutable, enumerable: true, });\r\n    // flatten, flattenCopy => // function flatten() { }\r\n    // flattenDeep, flattenDeepCopy => function flattenDeep() { }\r\n    Object.defineProperty(Array.prototype, 'flatten', { value: flatten, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'flattenCopy', { value: flattenCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'flattenDeep', { value: flattenDeep, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'flattenDeepCopy', { value: flattenDeepCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'range', { value: range, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'enumerate', { value: enumerate, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'enumerateGenerator', { value: enumerateGenerator, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'generator', { value: generator, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'del', { value: del, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'diction', { value: diction, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'toObject', { value: diction, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'subset', { value: subset, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'superset', { value: superset, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'extender', { value: extender, enumerable: true, configurable: true, writable: true });\r\n    Object.defineProperty(Array.prototype, 'log', { value: log, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'max', { value: max, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'maxIndexes', { value: maxIndexes, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'min', { value: min, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'minIndexes', { value: minIndexes, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'average', { value: average, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'sum', { value: sum, enumerable: true, });\r\n\r\n    // Object.defineProperty(Array.prototype, 'permutator', { value: permutator, enumerable: true, });\r\n    // Object.defineProperty(Array.prototype, 'permutationSubsets', { value: permutationSubsets, enumerable: true, });\r\n\r\n    Object.defineProperty(Array.prototype, 'getPermutations', { value: getPermutations, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'getCombinations', { value: getCombinations, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'getPermutationsOfCombinations', { value: getPermutationsOfCombinations, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'factorialMap', { value: factorialMap, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'acosMap', { value: acosMap, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'sinMap', { value: sinMap, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'asinMap', { value: asinMap, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'absMap', { value: absMap, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'cosMap', { value: cosMap, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'acosMapCopy', { value: acosMapCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'sinMapCopy', { value: sinMapCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'asinMapCopy', { value: asinMapCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'absMapCopy', { value: absMapCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'cosMapCopy', { value: cosMapCopy, enumerable: true, });\r\n    // Object.defineProperty(Array.prototype, 'LN2MapCopy', { value: LN2MapCopy, enumerable: true, });\r\n    // Object.defineProperty(Array.prototype, 'LN10MapCopy', { value: LN10MapCopy, enumerable: true, });\r\n    // Object.defineProperty(Array.prototype, 'LOG2EMapCopy', { value: LOG2EMapCopy, enumerable: true, });\r\n    // Object.defineProperty(Array.prototype, 'LOG10EMapCopy', { value: LOG10EMapCopy, enumerable: true, });\r\n    // Object.defineProperty(Array.prototype, 'LN2MapCopy', { value: LN2MapCopy, enumerable: true, });\r\n    // Object.defineProperty(Array.prototype, 'LN10MapCopy', { value: LN10MapCopy, enumerable: true, });\r\n    // Object.defineProperty(Array.prototype, 'LOG2EMapCopy', { value: LOG2EMapCopy, enumerable: true, });\r\n    // Object.defineProperty(Array.prototype, 'LOG10EMapCopy', { value: LOG10EMapCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'floorMap', { value: floorMap, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'ceilMap', { value: ceilMap, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'roundMap', { value: roundMap, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'squareMap', { value: squareMap, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'sqrtMap', { value: sqrtMap, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'powMap', { value: powMap, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'multiplyMap', { value: multiplyMap, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'floorMapCopy', { value: floorMapCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'ceilMapCopy', { value: ceilMapCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'roundMapCopy', { value: roundMapCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'squareMapCopy', { value: squareMapCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'sqrtMapCopy', { value: sqrtMapCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'powMapCopy', { value: powMapCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'multiplyMapCopy', { value: multiplyMapCopy, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'randomRange', { value: randomRange, enumerable: true, });\r\n    // Object.defineProperty(Array.prototype, 'fillRandomRange', { value: fillRandomRange, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'fillRange', { value: fillRange, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'Mapper', { value: Mapper, enumerable: true, });\r\n    Object.defineProperty(Array.prototype, 'MapperCopy', { value: MapperCopy, enumerable: true, });\r\n\r\n\r\n    // Object.defineProperty(Array.prototype, 'duplicates', { value: duplicates, enumerable: true, });\r\n\r\n}\r\n\r\nmodule.exports.ArrayExtended = ArrayExtended();\r\nmodule.exports.extendArray = extendArray;\r\n"]}